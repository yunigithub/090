<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Data Selection Datepicker</title>
    <!-- Include flatpickr CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            padding: 20px;
        }

        .container {
            max-width: 400px;
            margin: 0 auto;
        }

        label, select {
            display: block;
            margin-bottom: 10px;
        }

        .flatpickr-day {
            position: relative;
            padding-bottom: 25px; /* Adds extra space below the date */
        }

        .custom-data {
            display: block;
            font-size: 12px;
            color: blue;
            position: absolute;
            bottom: -18px; /* Adjusts the position further below */
            left: 0;
            right: 0;
            text-align: center;
        }
    </style>
</head>
<body>

<div class="container">
    <h2>Select Dataset and Date</h2>

    <!-- Dropdown to select between data90 and data91 -->
    <label for="dataset">Choose Dataset:</label>
    <select id="dataset">
        <option value="90">Dataset 90</option>
        <option value="91">Dataset 91</option>
    </select>

    <!-- Datepicker -->
    <label for="datepicker">Select Date:</label>
    <input type="text" id="datepicker">
</div>

<!-- Include flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
<script>
    let datasets = {};

    // Function to fetch dataset
    async function fetchDataset(datasetId) {
        try {
            const response = await fetch(`https://username.github.io/datasets/data${datasetId}.json`); // Ganti URL dengan lokasi file JSON Anda
            if (!response.ok) {
                throw new Error('Network response was not ok');
            }
            const data = await response.json();
            return data;
        } catch (error) {
            console.error('Error fetching dataset:', error);
            return {};
        }
    }

    // Helper function to render custom data below each date in the calendar
    function renderCustomData(selectedDataset, dateStr) {
        let selectedData = datasets[selectedDataset][dateStr] || "";
        return selectedData;
    }

    // Initialize the datepicker
    const datepicker = flatpickr("#datepicker", {
        dateFormat: "Y-m-d",
        minDate: "2024-10-01",
        maxDate: "2024-10-31",
        onDayCreate: function(dObj, dStr, fp, dayElem) {
            const dateStr = dayElem.dateObj.toISOString().slice(0, 10); // Format the date as YYYY-MM-DD
            const selectedDataset = document.getElementById('dataset').value;

            // Create a span to display the data
            const customDataElem = document.createElement('span');
            customDataElem.className = 'custom-data';
            customDataElem.textContent = renderCustomData(selectedDataset, dateStr);

            // Append the custom data element below the date
            dayElem.appendChild(customDataElem);
        }
    });

    // Load initial dataset
    fetchDataset('90').then(data => {
        datasets['90'] = data;
        datepicker.redraw();
    });

    // Listen for changes in the dataset dropdown to fetch and update the calendar
    document.getElementById('dataset').addEventListener('change', function() {
        const selectedDataset = this.value;
        fetchDataset(selectedDataset).then(data => {
            datasets[selectedDataset] = data;
            datepicker.redraw(); // Re-draw the calendar to update the data under each date
        });
    });
</script>

</body>
</html>
